function Res = StatThresh(ZSCi,p,sigma_b,tC,S_r);% STATHRESH computes the Pixel and Cluster thresholds by making extensive calls to the % 	STAT_THRESHOLD function, originally written by Keith Worsley for the FMRISTAT toolbox. % 	In StatThresh(ZSCi,p,sigma_b,tC,S_r), where ZSCi is a Z-scored classification image, p % 	is the p-value, sigma_b is the standard deviation of the Gaussian kernel used to smooth % 	the classification image, tC is the Cluster test threshold, and S_r is the search region.% 		E.g.,% 		SCi = double(imread('GenderCi.tiff'));% 		sigma_b = 20;	%std of smoothing filter% 		S_r = double(imread('faceMask.tif'))/255;% 		vecSCi = SCi(eq(S_r,0));% 		ZSCi = ZScoreSCi(SCi,[mean(vecSCi(:)), std(vecSCi(:))]);% 		ZSCi = ZSCi.* S_r;% 		p = .05;% 		tC = 2.7;% 		Res = StatThresh(ZSCi, p, sigma_b, tC, S_r);% % The Stat4Ci toolbox is free (http://mapageweb.umontreal.ca/gosselif/random-field.html); if you % use it in your research, please, cite us:% 	Chauvin, A., Worsley, K. J., Schyns, P. G., Arguin, M., & Gosselin, F. (2005). Accurate % 	statistical tests for smooth classification images. Journal of Vision, 5(9), 659-667, % 	http://journalofvision.org/5/9/1/, doi:10.1167/5.9.1.% % Alan Chauvin & Frédéric Gosselin (frederic.gosselin@umontreal.ca), 20/08/2004Res.ZSCi = ZSCi;FWHM = HalfMax(sigma_b);		% computes the full width half maximumif exist('S_r')	D = length(size(S_r)); 					% number of dimensions in the search space	[volumes, N] = CiVol(sum(S_r(:)), D) 	% computes the intrinsic volumeselse	D = length(size(ZSCi)); 					% number of dimensions in the search space	[volumes, N] = CiVol(sum(ones(size(ZSCi(:)))), D) 	% computes the intrinsic volumesend;[tP, k] = stat_threshold(volumes, N, FWHM, Inf, p, tC);	 % the actual statistical testsRes.tP = tP;Res.p = p;Res.tC = tC;Res.k = k;Res.FWHM = FWHM;